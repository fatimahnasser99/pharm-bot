services:
  gateway:
    build:
      context: ./gateway
    container_name: gateway
    ports:
      - "5000:5000"
    depends_on:
      - medicine-detection-service
      - ocr-service
      - drug-extractor-service
      - drug-interaction-service
    environment:
      APP_HOST: 0.0.0.0
      APP_PORT: 5000
      DETECTION_URL: http://medicine-detection-service:5001/detect
      OCR_URL: http://ocr-service:5001/extracted_text
      EXTRACTOR_URL: http://drug-extractor-service:5000/extract
      INTERACTION_URL: http://drug-interaction-service:8000/rag
    networks:
      - app-network

  medicine-detection-service:
    build:
      context: ./medicine_detection_service
    container_name: medicine-detection-service
    ports:
      - "5001:5001"
    environment:
      - MODEL_PATH=src/model/yolo11.pt
      - MODEL_FILE_ID=12k1Ni6QKxevlEeWp5Z7360HxEdT_7EQK
    networks:
      - app-network

  ocr-service:
    build:
      context: ./ocr-service
    container_name: ocr-service
    ports:
      - "5002:5001"
    environment:
      APP_HOST: 0.0.0.0
      APP_PORT: 5001
      GOOGLE_APPLICATION_CREDENTIALS: /app/key.json
      TYPE: service_account
      PROJECT_ID: ${GCP_PROJECT_ID}
      PRIVATE_KEY_ID: ${GCP_PRIVATE_KEY_ID}
      PRIVATE_KEY: ${GCP_PRIVATE_KEY}
      CLIENT_EMAIL: ${GCP_CLIENT_EMAIL}
      CLIENT_ID: ${GCP_CLIENT_ID}
      AUTH_URI: https://accounts.google.com/o/oauth2/auth
      TOKEN_URI: https://oauth2.googleapis.com/token
      AUTH_PROVIDER_X509_CERT_URL: https://www.googleapis.com/oauth2/v1/certs
      CLIENT_X509_CERT_URL: ${GCP_CLIENT_X509_CERT_URL}
      UNIVERSE_DOMAIN: googleapis.com
    volumes:
      - ./secrets/key.json:/app/key.json:ro
    networks:
      - app-network

  drug-extractor-service:
    build:
      context: ./drug_extractor_service
    container_name: drug-extractor-service
    ports:
      - "5003:5001"
    environment:
      APP_HOST: 0.0.0.0
      APP_PORT: 5000
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    networks:
      - app-network

  drug-interaction-service:
    build:
      context: ./drug_interaction_service
    container_name: drug-interaction-service
    ports:
      - "8000:8000"
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      INDEX_NAME: pharma-bot-rag
    networks:
      - app-network

  ui:
    build:
      context: ./ui
    container_name: ui
    ports:
      - "5004:5004"
    depends_on:
      - gateway
    networks:
      - app-network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - app-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  app-network:
    driver: bridge
